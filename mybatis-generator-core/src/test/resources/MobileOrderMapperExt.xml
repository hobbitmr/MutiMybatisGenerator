<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright ${license.git.copyrightYears} the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidian.order.dao.mapperExt.MobileOrderMapperExt" >
    <select id="selectOrders" resultMap="com.zhidian.order.dao.mapper.MobileOrderMapper.BaseResultMap">
        select
        *
        from Mobile_order
        <where>
            <if test="buyerId!=null and buyerId!=''">
                AND BUYER_ID=#{buyerId}
            </if>
            <if test="shopId!=null and shopId!=''">
                AND SHOP_ID=#{shopId}
            </if>
            <if test="orderStatus!=null and orderStatus!=''">
                AND ORDER_STATUS=#{orderStatus}
            </if>
            <if test="orderStatus==null">
                AND (ORDER_STATUS='150' or ORDER_STATUS='200' or ORDER_STATUS='250')
            </if>
            <if test="isEval !=null and isEval !=''">
                AND IS_EVAL=#{isEval} AND ORDER_STATUS='150'
            </if>
            and (order_type='2' or order_type='3')
        </where>
        order by REVISE_TIME DESC
    </select>
    <select id="selectOrdersByStatus" resultMap="com.zhidian.order.dao.mapper.MobileOrderMapper.BaseResultMap">
        select
        *
        from Mobile_order
        <where>
            <if test="orderStatus!=null and orderStatus!=''">
                AND ORDER_STATUS=#{orderStatus}
            </if>
        </where>
    </select>
    <select id="getOrderNumByBuyerIdAndStatus" resultType="int">
  		select count(1) from Mobile_order
        where BUYER_ID=#{buyerId} and ORDER_STATUS=#{orderStatus} and (order_type='2' or order_type='3')
  </select>

    <select id="getOrderNumByShopIdAndStatus" resultType="int">
        SELECT count(1) FROM Mobile_ORDER O WHERE O.STORAGE_ID = #{shopId}
        AND O.ORDER_STATUS = #{orderStatus}
        AND O.TYPE != 4
    </select>

    <select id="getOrderNumByShopIdOrStorageIdAndStatus" resultType="int">
        SELECT count(1) FROM Mobile_ORDER O WHERE O.STORAGE_ID = #{shopId}
        AND O.ORDER_STATUS = #{orderStatus}
        AND O.TYPE != 4
    </select>

    <select id="queryByPage" parameterType="map"
            resultMap="com.zhidian.order.dao.mapper.MobileOrderMapper.BaseResultMap">
        SELECT * FROM Mobile_ORDER O
        <where>
            <if test="searchOrderId!= null and searchOrderId !=''">
                AND O.ORDER_ID = trim(#{searchOrderId})
            </if>
            <if test="searchAffiliation != null and searchAffiliation !=''">
                AND O.AFFILIATION=#{searchAffiliation}
            </if>
            <if test="searchOrderStatus != null and searchOrderStatus !=''">
                AND O.ORDER_STATUS=#{searchOrderStatus}
            </if>
            <if test="searchStartCreateDate != null and searchStartCreateDate !=''">
                <![CDATA[ AND O.CREATE_DATE >= #{searchStartCreateDate} ]]>
            </if>
            <if test="searchEndCreateDate != null and searchEndCreateDate !=''">
                <![CDATA[ AND O.CREATE_DATE <= #{searchEndCreateDate} ]]>
            </if>
            <if test="searchStartDeliverDate != null and searchStartDeliverDate !=''">
                <![CDATA[ AND O.DELIVER_DATE >= #{searchStartDeliverDate} ]]>
            </if>
            <if test="searchEndDeliverDate != null and searchEndDeliverDate !=''">
                <![CDATA[ AND O.DELIVER_DATE <= #{searchEndDeliverDate} ]]>
            </if>
            <if test="searchHandler != null and searchHandler !=''">
                AND O.HANDLER=#{searchHandler}
            </if>
            <if test="searchCommodityType != null and searchCommodityType !=''">
                AND O.COMMODITY_TYPE=#{searchCommodityType}
            </if>
            <if test="searchShopId != null and searchShopId !=''">
                AND O.SHOP_ID=#{searchShopId}
            </if>
            <if test="searchNotType != null and searchNotType !=''">
                AND O.TYPE!=#{searchNotType}
            </if>
            <if test="storageId != null and storageId != ''">
                AND O.STORAGE_ID = #{storageId}
            </if>
            <if test="afterSaleStatus != null and afterSaleStatus != ''">
                AND EXISTS(SELECT
                  1
                FROM
                  Mobile_ORDER_PRODUCT P
                WHERE
                 P.ORDER_ID = O.ORDER_ID
                <if test="searchOrderStatus != null and searchOrderStatus !=''">
                    AND O.ORDER_STATUS=#{searchOrderStatus}
                </if>
                <if test="afterSaleStatus != null and afterSaleStatus != ''">
                    AND P.STATUS = #{afterSaleStatus}
                </if>
                <if test="storageId != null and storageId != ''">
                  AND P.STORAGE_ID = #{storageId})
                </if>
            </if>

            <choose>
                <when test="searchIsOld != null and searchIsOld !=''">
                    <!-- 三个月内的数据 -->
                    <![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 3 MONTH) > date(O.CREATE_DATE) ]]>
                </when>
                <otherwise>
                    <!-- 三个月前的数据 -->
                    <![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 3 MONTH) <= date(O.CREATE_DATE) ]]>
                </otherwise>
            </choose>
            AND O.TYPE != 4
        </where>
        <choose>
            <when test="orderBy != null and '' != orderBy">
                <![CDATA[ORDER BY ${orderBy}]]>
            </when>
            <otherwise>
                <![CDATA[ORDER BY CREATE_DATE DESC]]>
            </otherwise>
        </choose>
    </select>

    <select id="queryInvoiceByPage" parameterType="map"
            resultMap="com.zhidian.order.dao.mapper.MobileOrderMapper.BaseResultMap">
        SELECT * FROM Mobile_ORDER WHERE INVOICE_REQUIRED='1'
        <if test="searchOrderId!= null and searchOrderId !=''">
            AND ORDER_ID like CONCAT(trim(#{searchOrderId}), '%')
        </if>
        <if test="searchOrderStatus != null and searchOrderStatus !=''">
            AND ORDER_STATUS=#{searchOrderStatus}
        </if>
        <if test="searchStartCreateDate != null and searchStartCreateDate !=''">
            <![CDATA[ AND CREATE_DATE >= #{searchStartCreateDate} ]]>
        </if>
        <if test="searchEndCreateDate != null and searchEndCreateDate !=''">
            <![CDATA[ AND CREATE_DATE <= #{searchEndCreateDate} ]]>
        </if>
        <if test="searchIsBilling != null and searchIsBilling !='' and searchIsBilling=='1'.toString()">
            AND INVOICE_SEND_DATE is not null
        </if>
        <if test="searchIsBilling != null and searchIsBilling !='' and searchIsBilling=='0'.toString()">
            AND INVOICE_SEND_DATE is null
        </if>
        <choose>
            <when test="searchIsOld != null and searchIsOld !=''">
                <!-- 三个月内的数据 -->
                <![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 3 MONTH) > date(CREATE_DATE) ]]>
            </when>
            <otherwise>
                <!-- 三个月前的数据 -->
                <![CDATA[ AND DATE_SUB(CURDATE(), INTERVAL 3 MONTH) <= date(CREATE_DATE) ]]>
            </otherwise>
        </choose>
        <choose>
            <when test="orderBy != null and '' != orderBy">
                <![CDATA[ORDER BY ${orderBy}]]>
            </when>
            <otherwise>
                <![CDATA[ORDER BY CREATE_DATE DESC]]>
            </otherwise>
        </choose>
    </select>
    <update id="updateOrderToDeliver">
        update Mobile_ORDER
        SET   ORDER_STATUS = #{orderStatus},DELIVER_DATE = now()
        where ORDER_ID = #{orderId}
    </update>
    <update id="updateInvoice">
        update Mobile_ORDER
        SET INVOICE_SEND_DATE=#{invoiceSendDate},INVOICE_SENDER=#{invoiceSender},
        INVOICE_LOGISTICS_NO=#{invoiceLogisticsNo},INVOICE_LOGISTICS_CODE=#{invoiceLogisticsCode}
        where ORDER_ID = #{orderId}
    </update>

    <select id="selectOrderlList" resultMap="com.zhidian.order.dao.mapper.MobileOrderMapper.BaseResultMap">
        select *
        FROM Mobile_order WHERE ORDER_ID=#{orderId} OR ORDER_CODE=#{orderId}
    </select>

    <select id="selectOrderlByDrawCode" resultMap="com.zhidian.order.dao.mapper.MobileOrderMapper.BaseResultMap">
        select *
        FROM Mobile_order WHERE DRAW_CODE=#{drawCode} and STORAGE_ID=#{shopId}
    </select>

    <select id="getOrderNumByDrawCode" resultType="int">
        SELECT IFNULL(count(1),0) FROM Mobile_ORDER WHERE DRAW_CODE=#{drawCode} and STORAGE_ID=#{shopId}
    </select>
    <select id="getOrderNumByDrawCodeList" resultType="String">
        SELECT DRAW_CODE FROM Mobile_ORDER WHERE STORAGE_ID=#{shopId}
    </select>

    <select id="getOrderNumByBuyerId" resultType="int">
        select IFNULL(count(1),0) from mobile_order
        where BUYER_ID=#{buyerId} and ORDER_CODE != #{orderCode}
    </select>
    <insert id="inserts">
        insert into mobile_order (ORDER_ID, ORDER_CODE, ORDER_TYPE,
        DISTRIBUTOR_ID, BUYER_ID, MESSAGE,
        ORGINAL_AMOUNT, AMOUNT, DISCOUNT,
        FREIGHT, TICKET_AMOUNT, USER_SCORE,
        USER_BALANCE_MONEY, ORDER_DESC, ORDER_STATUS,
        CREATE_DATE, PAY_METHOD, PAY_DATE,
        PAY_ACCOUNT, PAY_NO, DELIVER_DATE,
        FINISH_DATE, CANCEL_ORDER_DATE, CLIENT_TYPE,
        APP_VERSION, RECEIVER, PROVINCE,
        CITY, AREA, ADDRESS,
        LONGITUDE, LATITUDE, CONTACT_PHONE,
        ZIP_CODE, STREET, REFUND_STATUS,
        IS_EVAL, IS_PROLONG_RECEIVE, IS_PROLONG_EVAL,
        HANDLER, DISPACH_DATE, REFUND_AMOUNT,
        REFUND_DATE, INVOICE_REQUIRED, INVOICE_TYPE,
        INVOICE_UNIT, INVOICE_TITLE, INVOICE_ADDRESS,
        INVOICE_PHONE, INVOICE_SEND_DATE, INVOICE_SENDER,
        INVOICE_LOGISTICS_NO, INVOICE_LOGISTICS_CODE,
        COMPLETED_TIME, IS_MERCHANT_BALANCE, REVISE_TIME,
        INNER_PAY_ID, SUPPLIER_ID, SUPPLIER_NAME,
        THIRD_ORDER, PACKAGE_PRICE, LOGISTICS_ID,
        LOGISTICS_NO, LOGISTICS_REAL_NO, LOGISTICS_NAME,
        STORAGE_ID, STORAGE_NAME, STORAGE_ADDRESS,
        STORAGE_CONTACTS, STORAGE_TEL, STORAGE_ACCOUNT,
        STORAGE_TYPE, DEPART_ID, DEPART_NAME,
        STORAGE_DESC, COMMODITY_TYPE, SHOP_ID,
        SHOP_NAME, ORDER_VERSION, MEMO,
        LOGISTICS_TYPE, ENV, TOTAL_LENGTH,
        TOTAL_HEIGHT, TOTAL_WEIGHT, LOGISTICS_RECEIVE_NAME,
        LOGISTICS_RECEIVE_PHONE, TOTAL_WIDTH, SEND_TO_LOGISTICS,
        UPDATE_LOGISTICS_DATE, UPDATE_LOGISTICS_RECEIVE_DATE,
        DRAW_CODE, DRAW_TIME)
        values
        <foreach collection="records" item="item" index="index"
                 separator=",">
            (#{item.orderId,jdbcType=BIGINT}, #{item.orderCode,jdbcType=BIGINT}, #{item.orderType,jdbcType=CHAR},
            #{item.distributorId,jdbcType=CHAR}, #{item.buyerId,jdbcType=CHAR}, #{item.message,jdbcType=VARCHAR},
            #{item.orginalAmount,jdbcType=DECIMAL}, #{item.amount,jdbcType=DECIMAL}, #{item.discount,jdbcType=DECIMAL},
            #{item.freight,jdbcType=DECIMAL}, #{item.ticketAmount,jdbcType=DECIMAL}, #{item.userScore,jdbcType=DECIMAL},
            #{item.userBalanceMoney,jdbcType=DECIMAL}, #{item.orderDesc,jdbcType=VARCHAR}, #{item.orderStatus,jdbcType=INTEGER},
            #{item.createDate,jdbcType=TIMESTAMP}, #{item.payMethod,jdbcType=CHAR}, #{item.payDate,jdbcType=TIMESTAMP},
            #{item.payAccount,jdbcType=VARCHAR}, #{item.payNo,jdbcType=VARCHAR}, #{item.deliverDate,jdbcType=TIMESTAMP},
            #{item.finishDate,jdbcType=TIMESTAMP}, #{item.cancelOrderDate,jdbcType=TIMESTAMP}, #{item.clientType,jdbcType=CHAR},
            #{item.appVersion,jdbcType=VARCHAR}, #{item.receiver,jdbcType=VARCHAR}, #{item.province,jdbcType=VARCHAR},
            #{item.city,jdbcType=VARCHAR}, #{item.area,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR},
            #{item.longitude,jdbcType=DECIMAL}, #{item.latitude,jdbcType=DECIMAL}, #{item.contactPhone,jdbcType=VARCHAR},
            #{item.zipCode,jdbcType=VARCHAR}, #{item.street,jdbcType=VARCHAR}, #{item.refundStatus,jdbcType=INTEGER},
            #{item.isEval,jdbcType=CHAR}, #{item.isProlongReceive,jdbcType=CHAR}, #{item.isProlongEval,jdbcType=CHAR},
            #{item.handler,jdbcType=VARCHAR}, #{item.dispachDate,jdbcType=TIMESTAMP}, #{item.refundAmount,jdbcType=DECIMAL},
            #{item.refundDate,jdbcType=TIMESTAMP}, #{item.invoiceRequired,jdbcType=CHAR}, #{item.invoiceType,jdbcType=CHAR},
            #{item.invoiceUnit,jdbcType=CHAR}, #{item.invoiceTitle,jdbcType=VARCHAR}, #{item.invoiceAddress,jdbcType=VARCHAR},
            #{item.invoicePhone,jdbcType=VARCHAR}, #{item.invoiceSendDate,jdbcType=TIMESTAMP}, #{item.invoiceSender,jdbcType=VARCHAR},
            #{item.invoiceLogisticsNo,jdbcType=VARCHAR}, #{item.invoiceLogisticsCode,jdbcType=VARCHAR},
            #{item.completedTime,jdbcType=TIMESTAMP}, #{item.isMerchantBalance,jdbcType=INTEGER}, #{item.reviseTime,jdbcType=TIMESTAMP},
            #{item.innerPayId,jdbcType=VARCHAR}, #{item.supplierId,jdbcType=VARCHAR}, #{item.supplierName,jdbcType=VARCHAR},
            #{item.thirdOrder,jdbcType=VARCHAR}, #{item.packagePrice,jdbcType=DECIMAL}, #{item.logisticsId,jdbcType=VARCHAR},
            #{item.logisticsNo,jdbcType=VARCHAR}, #{item.logisticsRealNo,jdbcType=VARCHAR}, #{item.logisticsName,jdbcType=VARCHAR},
            #{item.storageId,jdbcType=VARCHAR}, #{item.storageName,jdbcType=VARCHAR}, #{item.storageAddress,jdbcType=VARCHAR},
            #{item.storageContacts,jdbcType=VARCHAR}, #{item.storageTel,jdbcType=VARCHAR}, #{item.storageAccount,jdbcType=VARCHAR},
            #{item.storageType,jdbcType=VARCHAR}, #{item.departId,jdbcType=VARCHAR}, #{item.departName,jdbcType=VARCHAR},
            #{item.storageDesc,jdbcType=VARCHAR}, #{item.commodityType,jdbcType=CHAR}, #{item.shopId,jdbcType=CHAR},
            #{item.shopName,jdbcType=VARCHAR}, #{item.orderVersion,jdbcType=INTEGER}, #{item.memo,jdbcType=VARCHAR},
            #{item.logisticsType,jdbcType=INTEGER}, #{item.env,jdbcType=INTEGER}, #{item.totalLength,jdbcType=INTEGER},
            #{item.totalHeight,jdbcType=INTEGER}, #{item.totalWeight,jdbcType=INTEGER}, #{item.logisticsReceiveName,jdbcType=VARCHAR},
            #{item.logisticsReceivePhone,jdbcType=VARCHAR}, #{item.totalWidth,jdbcType=INTEGER}, #{item.sendToLogistics,jdbcType=INTEGER},
            #{item.updateLogisticsDate,jdbcType=TIMESTAMP}, #{item.updateLogisticsReceiveDate,jdbcType=TIMESTAMP},
            #{item.drawCode,jdbcType=VARCHAR}, #{item.drawTime,jdbcType=VARCHAR})
        </foreach>
    </insert>



</mapper>
